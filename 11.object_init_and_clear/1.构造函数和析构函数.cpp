#include <iostream>
using namespace std;

//对象的初始化和清理

class person {
public:
	//1、构造函数  没有返回值且不用写void；函数名与类名相同；构造函数可以有参数，可以发生重载；
	//创建对象时构造函数会自动调用，且只调用一次
	person(){  //构造函数会被自动调用，而且只调用一次
		cout << "1、person构造函数的调用" << endl;  //如果不写构造函数，编译器会提供一个，不过是空函数
	}

	//2、析构函数  没有返回值且不写void；函数名与类名相同，不过要在类名前加上 ~ 
	//析构函数不可以有参数，因此不可以发生重载；对象在销毁前会自动调用析构函数，且只会调用一次
	~person() {
		cout << "2、person析构函数的调用" << endl;  //如果不写析构函数，编译器也会提供一个，不过也是个空函数
	}

};

//构造和析构都是必须有的实现，如果我们不提供，编译器会提供一个空实现的构造和析构函数
void test01() {
	person p;  //在栈区上的数据，在test01（）执行完毕后，释放这个对象
}

int main() {

	//test01();  //栈区上的数据在test01（）调用完之后被释放，所以会执行析构函数

	person p;  //执行之后，执行下一行"请按任意键继续"，再执行才会被释放，释放前才会执行析构函数

	system("pause");
	return 0;
}